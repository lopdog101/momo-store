#changes 0.1.2
variables:
  VERSION: "0.1.${CI_PIPELINE_ID}"
  SAST_EXCLUDED_ANALYZERS: "eslint,gosec,nodejs-scan"

stages:
  - build
  - test
 # - release
 # - deploy

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: Security/SAST.gitlab-ci.yml  

build-backend-code-job:
  image: golang:1.18-alpine3.17
  stage: build  
  before_script:
  #/// устанавливаем необходимые пакеты
    - apk add curl tar
  script:
  #/// создаем артефакт приложения и присваиваем ему версию по SemVer
    - cd backend/cmd/api/
    - go build -o momo-backend${VERSION} 
  #/// архивируем артефакт и копируем его в Nexus репозиторий
    - tar czvf momo-store-${VERSION}.tar.gz momo-backend${VERSION}
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-store-${VERSION}.tar.gz ${NEXUS_REPO_BACKEND_URL}/${VERSION}/momo-store-${VERSION}.tar.gz 

#/// запускаем тестирование кода встроенным тестом
go-test-code-job:
  image: golang:1.18-alpine3.17
  stage: test 
  variables:
    CGO_ENABLED: 0
  dependencies:
    - build-backend-code-job
  script:
    - cd backend
    - go test -v ./...

#/// запускаем тестирование кода средствами Sonarqube
sonarqube-backend-sast:
  stage: test
  dependencies:
    - build-backend-code-job
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]  
  script:
    - cd backend
    - >
      sonar-scanner 
      -Dsonar.projectName=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.projectKey=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.sources=. 
      -Dsonar.host.url=${SONAR_URL}
      -Dsonar.login=${SONAR_LOGIN_BACKEND}

build-backend-docker-job:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
  #/// Создаем Docker image приложения и сохраняем его в GitLab Container Registry. Образу присваивается версия по SemVer
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-backend:$CI_COMMIT_SHA