variables:
  VERSION: "0.1.${CI_PIPELINE_ID}"
  
stages:
  - build
  - test
  - notify
 # - release
 # - deploy

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml' 

build-frontend-code:
  stage: build   # этап build
  cache:
    - key: npm
      paths:
        - frontend/.npm/
  script:
    - cd frontend
    - npm ci --cache .npm --prefer-offline # загрузка зависимостей из кеша
    - npm run build
    - mkdir momo-frontend-${VERSION}
    - mv dist/ momo-frontend-${VERSION}
    - tar czvf momo-frontend-${VERSION}.tar.gz momo-frontend-${VERSION}
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file momo-frontend-${VERSION}.tar.gz ${NEXUS_REPO_FRONTEND_URL}/${VERSION}/momo-store-${VERSION}.tar.gz 

build-frontend-docker:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    #/// Создаем Docker image приложения и сохраняем его в GitLab Container Registry. Образу присваивается версия по SemVer
    - cd frontend
    - >
      docker build
      --build-arg VUE_APP_API_URL=/api
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner \
        -Dsonar.projectName=${SONAR_FRONTEND_PROJECT_KEY} \
        -Dsonar.projectKey=${SONAR_FRONTEND_PROJECT_KEY} \
        -Dsonar.sources=. \
        -Dsonar.host.url=${SONAR_URL} \
        -Dsonar.login=${SONAR_LOGIN_FRONTEND}
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  needs:
    - build-frontend-code

notify:
  stage: notify
  only:
    changes:
    - frontend/**/*
    variables:
      - $CI_COMMIT_MESSAGE =~ /send notification/
  script:
    # Отредактировать ссылку
    - 'curl -X POST -H "Content-type: application/json" -d "{\"chat_id\": \"${TELEGRAM_CHAT_ID}\", \"text\": \"Вышла новая версия Frontend Momo — $VERSION. Скачать frontend можно по ссылке — https://nexus.k8s.praktikum-services.tech/service/rest/repository/browse/sausage-store-LysyukSergey-frontend/sausage-store-front/sausage-store/$VERSION/ \"}" ${TELEGRAM_API}'
